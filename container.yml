name: kaggle
version: 1.0.0
kind: compute

dependencies:
  - python3
  - python3-yaml
  - python3-pip

install:
  - pip3 install kaggle

files:
  - kaggle_brane/
  - run.py

entrypoint:
  kind: task
  exec: run.py

types:
  # unfortunately, we cannot use types for input because we don't know how to instantiate objects
  # https://github.com/onnovalkering/brane/blob/master/examples/camelyon/Camelyon.ipynb
  # is the only example we found online but it does not parse
  KaggleCredentials:
    name: KaggleCredentials
    properties:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string

  # unfortunately, we cannot use CommandStatus in nested outputs
  CommandStatus:
    name: status
    properties:
      - name: error
        type: string
      - name: success
        type: boolean

  DebugAuthOutput:
    name: DebugAuthOutput
    properties:
      - name: error
        type: string
      - name: success
        type: boolean
      - name: kaggle_key
        type: string
      - name: kaggle_username
        type: string
      # brane wont deserialize this
      # - name: status
      #   type: CommandStatus

  DownloadCompetitionOutput:
    name: DownloadCompetitionOutput
    properties:
      - name: error
        type: string
      - name: success
        type: boolean
      # brane wont deserialize this
      # - name: status
      #   type: CommandStatus

actions:
  debug_auth:
    command:
      args: [debug, auth]
    input:
      # - name: credentials
      #   type: KaggleCredentials
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string

    output:
      - name: output
        type: DebugAuthOutput

  list_competitions:
    command:
      args: [competitions, list]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
      - name: group
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: category
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: sort_by
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: page
        type: integer
        optional: true
        default:
          v: integer
          c: 0
      - name: search
        type: string
        optional: true
        default:
          v: unicode
          c: ""
    output:
      - name: status
        type: CommandStatus
      - name: output
        type: string

  list_competition_files:
    command:
      args: [competitions, files]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  download_competition:
    command:
      args: [competitions, download]
    pattern:
      prefix: download_competition
      infix:
        - to
        - as
    input:
      - name: competition
        type: string
      - name: destination
        type: string
        optional: true
        default:
          v: unicode
          c: "."
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: force
        type: boolean
        optional: true
        default:
          v: boolean
          c: false
      - name: unzip
        type: boolean
        optional: true
        default:
          v: boolean
          c: true
    output:
      - name: output
        type: DownloadCompetitionOutput

  submit_competition:
    command:
      args: [competitions, submit]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: filename
        type: string
      - name: competition
        type: string
      - name: message
        type: string
        optional: true
        default:
          v: unicode
          c: ""
    output:
      - name: status
        type: CommandStatus

  list_competition_submissions:
    command:
      args: [competitions, submissions]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  list_competition_leaderboard:
    command:
      args: [competitions, download]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
      - name: download
        type: boolean
        optional: true
        default:
          v: boolean
          c: false
      - name: destination
        type: string
        optional: true
        default:
          v: unicode
          c: ""
    output:
      - name: status
        type: CommandStatus

  list_dataset:
    command:
      args: [datasets, list]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: sort_by
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: size
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: file_type
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: license_name
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: tags_ids
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: search
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: user
        type: string
        optional: true
        default:
          v: unicode
          c: ""
      - name: mine
        type: string
        optional: true
        default:
          v: integer
          c: 0
      - name: page
        type: integer
        optional: true
        default:
          v: integer
          c: 0
      - name: max_size
        type: integer
        optional: true
        default:
          v: integer
          c: 0
      - name: min_size
        type: integer
        optional: true
        default:
          v: integer
          c: 0
    output:
      - name: status
        type: CommandStatus

  list_dataset_files:
    command:
      args: [datasets, files]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  download_dataset:
    command:
      args: [datasets, download]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  create_dataset:
    command:
      args: [datasets, create]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  version_dataset:
    command:
      args: [datasets, version]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  init_dataset:
    command:
      args: [datasets, init]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  list_dataset_metadata:
    command:
      args: [datasets, metadata]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  list_dataset_status:
    command:
      args: [datasets, status]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  list_kernels:
    command:
      args: [kernels, list]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  init_kernel:
    command:
      args: [kernels, init]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  push_kernel:
    command:
      args: [kernels, push]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  pull_kernel:
    command:
      args: [kernels, pull]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  kernel_output:
    command:
      args: [kernels, output]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus

  kernel_status:
    command:
      args: [kernels, status]
    input:
      - name: kaggle_username
        type: string
      - name: kaggle_key
        type: string
      # - name: credentials
      #   type: KaggleCredentials
      - name: competition
        type: string
    output:
      - name: status
        type: CommandStatus
